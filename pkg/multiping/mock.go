// Code generated by MockGen. DO NOT EDIT.
// Source: multiping.go

// Package multiping is a generated GoMock package.
package multiping

import (
	reflect "reflect"

	ping "github.com/go-ping/ping"
	gomock "github.com/golang/mock/gomock"
)

// MockPingClient is a mock of PingClient interface.
type MockPingClient struct {
	ctrl     *gomock.Controller
	recorder *MockPingClientMockRecorder
}

// MockPingClientMockRecorder is the mock recorder for MockPingClient.
type MockPingClientMockRecorder struct {
	mock *MockPingClient
}

// NewMockPingClient creates a new mock instance.
func NewMockPingClient(ctrl *gomock.Controller) *MockPingClient {
	mock := &MockPingClient{ctrl: ctrl}
	mock.recorder = &MockPingClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingClient) EXPECT() *MockPingClientMockRecorder {
	return m.recorder
}

// PingProcess mocks base method.
func (m *MockPingClient) PingProcess(pr []PingResult) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PingProcess", pr)
}

// PingProcess indicates an expected call of PingProcess.
func (mr *MockPingClientMockRecorder) PingProcess(pr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingProcess", reflect.TypeOf((*MockPingClient)(nil).PingProcess), pr)
}

// MockPinger is a mock of Pinger interface.
type MockPinger struct {
	ctrl     *gomock.Controller
	recorder *MockPingerMockRecorder
}

// MockPingerMockRecorder is the mock recorder for MockPinger.
type MockPingerMockRecorder struct {
	mock *MockPinger
}

// NewMockPinger creates a new mock instance.
func NewMockPinger(ctrl *gomock.Controller) *MockPinger {
	mock := &MockPinger{ctrl: ctrl}
	mock.recorder = &MockPingerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPinger) EXPECT() *MockPingerMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockPinger) Run() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run")
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockPingerMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockPinger)(nil).Run))
}

// Statistics mocks base method.
func (m *MockPinger) Statistics() *ping.Statistics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Statistics")
	ret0, _ := ret[0].(*ping.Statistics)
	return ret0
}

// Statistics indicates an expected call of Statistics.
func (mr *MockPingerMockRecorder) Statistics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Statistics", reflect.TypeOf((*MockPinger)(nil).Statistics))
}
